<h1><%= t("admin.event_list") %></h1>

<p class="text-right">
<%= link_to "新建活动", new_admin_event_path, :class => "btn btn-primary" %>
</p>

<%= form_tag bulk_update_admin_events_path, :class => "form-inline" do %>
<%# <p><%= submit_tag "批次删除", :class => "btn btn-danger", :data => { :confirm => "确定要删除吗?" } %>
  <p>
  <%= select_tag :event_status, options_for_select( Event::STATUS.map{ |s| [t(s, :scope => "event.status"), s] }), :class => "form-control" %>
  <%# <%= submit_tag t(:bulk_update), :class => "btn btn-primary" %> 
  <%= submit_tag t(:bulk_delete), :class => "btn btn-danger", :data => { :confirm => "Are you sure?" } %>
  </p>
<table class="table">
  <thead>
    <tr>
      <th><%= check_box_tag "全选", "1", false, :id => "toggle_all" %></th>
      <th>活动名称</th>
      <th>操作</th>
    </tr>
  </thead>
    <tbody class="sortable">
      <% @events.each do |event| %>
        <tr data-reorder-url="<%= reorder_admin_event_path(event) %>">
          <td>
            <%= check_box_tag "ids[]", event.id %>
          </td>
          <td>
            <span class="sortable_icon">☰</span>
            <%= link_to event.name, admin_event_path(event) %>
          </td>

          <td>
            <%# 在路由方法 reorder_admin_event_path 中，我们额外传了 :position 参数，等会在 controller 中就可以接收到 params[:position] 代表移动的方式 %>
            <%= link_to "置顶", reorder_admin_event_path(event, :position => :first), :method => :post, :class => "btn btn-default" %>
            <%= link_to "置底", reorder_admin_event_path(event, :position => :last), :method => :post, :class => "btn btn-default" %>
            <%= link_to "Registrations", admin_event_registrations_path(event), :class => "btn btn-default" %>
            <%= link_to "票种", admin_event_tickets_path(event), :class => "btn btn-default" %>
            <%= link_to "编辑", edit_admin_event_path(event), :class => "btn btn-default" %>
            <%= link_to "删除", admin_event_path(event), :method => "delete", :data => { :confirm => "确定要删除吗?" }, :class => "btn btn-danger" %>
        </tr>
      <% end %>
    </tbody>
  </table>
<% end %>

  <script>
   // 这个 javascript 会绑事件在 #toggle_all 核选方块上，来做全选效果
   $("#toggle_all").click(function(){
     if ( $(this).prop("checked") ) {
       $("input[name='ids[]']").prop("checked", true);
     } else {
       $("input[name='ids[]']").prop("checked", false);
     }
   })
     $( ".sortable" ).sortable({
    axis: 'y',       // 限制只能上下拖拉
    items: 'tr',     // 拖拉整个 tr
    cursor: 'move',  // 变更拖拉时的 icon
    handle: ".sortable_icon",  // 限制只有点 ☰ 才能开始拖拉，砍掉这行的话，会是整个 tr 都可以进行拖拉，你可以试试看
    stop: function(e, ui){     // 当拖拉结束时，会调用这个方法
      ui.item.children('td').effect('highlight', {}, 1000)
    },
    update: function(e, ui) {   // 当拖拉结束并且 DOM 上的位置变更时，会调用这个方法
      reorder_url = ui.item.data('reorder-url')
      position = ui.item.index()  // 取得顺序
      $.ajax({
       type: 'POST',
       url: reorder_url,
       dataType: 'json',
       data: { position: position }
      })
    }
  });
 </script>